1. oracle에서 student테이블과 exam_01 테이블을 파이썬으로 불러온 후
각 학생의 정보와 시험성적을 모두 갖는 데이터프레임 생성, 학년별 평균점수을 
구하세요

# sql load 함수 생성
import cx_Oracle
def get_query(sql,ip='127.0.0.1',port='1521',sid='orcl',id='scott',passwd='oracle') :
    txt = 'cx_Oracle.connect("' + id + '/' + passwd + '@' + ip + ':' + port + '/' + sid +'")'
    con = eval(txt)
    return pd.read_sql(sql, con=con)

std = get_query('select * from student')
exam = get_query('select * from exam_01')

pd.merge(std, exam, on='STUDNO')

2. emp2 데이터를 불러온 후 
emp2 = pd.read_csv("emp2.csv", encoding='cp949')

1) position이 존재하지 않는 대상의 position을 na 처리하여라
emp2['POSITION'] = emp2['POSITION'].replace('-',NA)

2) age 컬럼을 만들고 나이를 계산하여 추가하여라
f1 = lambda x : int(str(x)[:4])
emp2['AGE'] = 2019 - emp2['BIRTHDAY'].map(f1)

3) 1970년대에 태어난 사람의 이름과 pay를 출력하여라.
f2 = lambda x : str(x)[:3]+'0' == '1970'
emp2.loc[emp2['BIRTHDAY'].map(f2), ['NAME','PAY']]

4) pay2 컬럼을 만들고 상위관리자의 연봉과의 차이를 계산하여 추가하여라 
df2 = pd.merge(emp2, emp2, left_on ='PEMPNO' , right_on='EMPNO')
df2['PAY2'] =  df2['PAY_y'] - df2['PAY_x']

5) top(data,column,n)을 입력하면 data의 column이 큰 순서대로 n개 행을
보여주는 함수 생성
top = lambda data,column,n : data.sort_values(by=column, ascending=False).iloc[:5]
top(emp2, 'PAY', 5)

3. gogak, gift 테이블을 각각 파이썬에 불러와서 각 고객이 가져갈 수 있는 최대 상품 출력
1) 일반 사용자 정의 함수
ff = lambda x : gift.loc[(gift['G_START'] < x) & (x < gift['G_END']),'GNAME'].values[0]
gogak['POINT'].map(ff)

2) cut 사용
label_point[10] = 1000001
pd.cut(gogak['POINT'], label_point, labels=gift['GNAME'], right=False)

# 참고 : 기타 시리즈 행 추가
label_point.append(Series(1000001), ignore_index=True)
pd.concat([label_point, Series(1000001)], ignore_index=True)


