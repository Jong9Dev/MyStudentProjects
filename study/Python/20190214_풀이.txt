2. emp_1, emp_2, emp_3 파일을 이용하여(엑셀파일)
1) emp_1 파일과 emp_2파일을 읽어들여 하나의 테이블 형태로 만들어라
aa = pd.ExcelFile("emp_1.xlsx")
df1 = aa.parse('Data')
aa = pd.ExcelFile("emp_2.xlsx")
df2 = aa.parse('Sheet1')

df12 = pd.merge(df1,df2, on='EMPNO')

2) 위에서 생성된 객체와 emp_3 데이터를 하나의 테이블 형태로 만들어라.
aa = pd.ExcelFile("emp_3.xlsx")
df3 = aa.parse('Sheet1')
df123 = pd.concat([df12,df3], ignore_index=True)

3) 1~2에서 결합한 테이블에 dept 테이블을 참조한 부서명을 추가하여 새로운 테이블 형태로 만들어라.
df123_dept = pd.merge(df123,dept, on='DEPTNO')

2. emp_1.csv 데이터 로딩 후(위와 다른 파일)
1) job이 analyst인 사원들의 평균연봉을 구하여라.
# SAL을 숫자 컬럼으로 변경
f1 = lambda x : int(x.replace('"',''))
emp['SAL'] = emp['SAL'].map(f1)

# 평균 계산
emp.loc[emp['JOB'] == 'ANALYST', 'SAL'].mean()

2) 내년 임금은 현재 sal의 10% 증가값에 comm을 더한 값으로 산정, new_sal이라는 컬럼에 저장
emp['NEW_SAL'] = (emp['SAL'] * 1.1).add(emp['COMM'], fill_value=0)

3) row이름은 각 사원의 사원번호로 설정
emp = emp.set_index('EMPNO')

4) 컬럼 이름순으로(오름차순) 컬럼 재배치
emp.sort_index(axis=1)

3.student와 exam_01 테이블을 조인하여
각 학생의 학점을 출력하고
각 학점별 학생의 인원수를 구하여라.

단, 학점은 아래와 같은 기준으로 부여

90이상 : A
80이상 90미만 : B
70이상 80미만 : C
70미만 : F


student = get_query("select * from student")
exam = get_query("select * from exam_01")

student2 = pd.merge(student, exam)

aa = pd.cut(student2['TOTAL'], [0,70,80,90,101], right=False, labels=['F','C','B','A'])
aa.value_counts().sort_index(ascending=False)




